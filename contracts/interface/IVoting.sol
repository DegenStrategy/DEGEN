// SPDX-License-Identifier: NONE
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.6.6. SEE SOURCE BELOW. !!
pragma solidity >=0.7.0 <0.9.0;

interface IVoting {
    event AddCredit(address indexed depositor, uint256 amount);
    event BurnCredit(address burnFrom, uint256 amount, uint256 forId);
    event OwnershipTransferred(
        address indexed previousOwner,
        address indexed newOwner
    );
    event SetCreditingContract(address _contract, bool setting);
    event SetDeductingContract(address _contract, bool setting);

    function addCredit(uint256 amount, address _beneficiary) external;

    function airdropContract() external view returns (address);

    function airdropVotingCredit(uint256 amount, address beneficiary) external;

    function burnCredit(uint256 amount, uint256 _forId) external;

    function burnedForId(uint256) external view returns (uint256);

    function canInitialize() external view returns (bool);

    function changeGovernor() external;

    function creditingContract(address) external view returns (bool);

    function creditingContractCount() external view returns (uint256);

    function deductCredit(address from, uint256 amount) external returns (bool);

    function deductingContract(address) external view returns (bool);

    function deductingContractCount() external view returns (uint256);

    function depositCredit(uint256 amount) external;

    function initializeCreditAddress() external view returns (address);

    function modifyCreditingContract(address _contract, bool setting) external;

    function modifyDeductingContract(address _contract, bool setting) external;

    function owner() external view returns (address);

    function renounceInitialization() external;

    function renounceOwnership() external;

    function token() external view returns (address);

    function transferOwnership(address newOwner) external;

    function userCredit(address) external view returns (uint256);
}
